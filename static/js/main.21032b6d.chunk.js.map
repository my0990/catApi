{"version":3,"sources":["logo.svg","style/theme.js","img/paw.png","components/clickIcon.js","components/Cat.js","App.js","reportWebVitals.js","index.js"],"names":["size","mobile","tabletS","tabletM","tabletL","laptop","dexktop","Wrapper","styled","div","theme","Icon","animated","iconImg","ClickIcon","props","useSpring","from","y","to","loop","delay","style","Container","Cat","useState","url","setUrl","isClicked","setIsClicked","btnClicked","fetch","then","response","json","data","opacity","onClick","img","src","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,4BCWAA,G,MATF,CACTC,OAAQ,QACRC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,QAAS,W,QCRE,MAA0B,gC,OCMnCC,EAAUC,IAAOC,IAAV,iSAOuBC,EAAMT,QAQpCU,EAAOH,YAAOI,WAASH,IAAhBD,CAAH,kPAIYK,EAGcH,EAAMT,QAsB3Ba,I,IAAAA,EAhBf,WACI,IAAMC,EAAQC,oBAAU,CACpBC,KAAM,CAACC,EAAG,IACVC,GAAI,CAACD,EAAG,GACRE,MAAM,EACNC,MAAO,MAEX,OACI,8BACI,cAACd,EAAD,UACI,cAACI,EAAD,CAAMW,MAAOP,SCrCvBQ,EAAYf,IAAOC,IAAV,sPAOqBC,EAAMT,QAMpCM,EAAUC,IAAOC,IAAV,gTAQuBC,EAAMT,QAwC3BuB,MAjCf,WAAe,IAAD,EACWC,qBADX,mBACHC,EADG,KACCC,EADD,OAKuBF,oBAAS,GALhC,mBAKHG,EALG,KAKOC,EALP,KAMJC,EAAa,WAHfC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAIR,EAAOQ,EAAK,GAAGT,SAKnG,IAAZE,GACHC,GAAa,IAEXd,EAAQC,oBAAU,CACpBC,KAAM,CAACmB,QAAS,GAChBjB,GAAI,CAACiB,QAAS,KAIlB,OACI,cAACb,EAAD,UACI,eAAC,EAAD,CAASc,QAAS,WAAKP,KAAvB,UACMF,EAIJ,KAHG,wCACD,cAAC,EAAD,OAIC,cAAC,WAASU,IAAV,CAAchB,MAAOP,EAAOwB,IAAKb,UC3CnCc,MAXf,WAIE,OACE,8BACE,cAAC,EAAD,OCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21032b6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n\r\nconst size = {\r\n    mobile: \"770px\",\r\n    tabletS: \"1023px\",\r\n    tabletM: \"1220px\",\r\n    tabletL: \"1280px\",\r\n    laptop: \"1460px\",\r\n    dexktop: \"1700px\"\r\n}\r\n\r\nexport default size;","export default __webpack_public_path__ + \"static/media/paw.89233a66.png\";","import React from 'react'\r\nimport {animated, useSpring} from 'react-spring'\r\nimport styled from 'styled-components'\r\nimport theme from '../style/theme.js';\r\nimport iconImg from '../img/paw.png';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 250px;\r\n    height: 250px;\r\n    font-size: 5em;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media screen and (max-width: ${theme.mobile}) {\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n    overflow: visible;\r\n    \r\n`\r\n\r\nconst Icon = styled(animated.div)`\r\n    width: 200px;\r\n    height:200px;\r\n    display: block;\r\n    background: url(${iconImg});\r\n    background-size: cover;\r\n    \r\n    @media screen and (max-width: ${theme.mobile}) {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n`\r\n\r\nfunction ClickIcon() {\r\n    const props = useSpring({\r\n        from: {y: 30},\r\n        to: {y: 0},\r\n        loop: true,\r\n        delay: 1000\r\n    })\r\n    return(\r\n        <div>\r\n            <Wrapper>\r\n                <Icon style={props}/>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClickIcon","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport './cat.css'\r\nimport theme from '../style/theme.js';\r\nimport ClickIcon from './clickIcon.js'\r\nimport {animated,useSpring} from 'react-spring';\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0;\r\n    font-size: 5em;\r\n    display: flex;\r\n    align-items: center;\r\n    @media screen and (max-width: ${theme.mobile}) {\r\n        height: 90vh;\r\n        font-size: 2em;\r\n    }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 1300px;\r\n    height: 100%;\r\n    background: skyblue;\r\n    margin: 0 auto;\r\n    @media screen and (max-width: ${theme.mobile}) {\r\n        width: 100%;\r\n        height: 80%;\r\n    }\r\n    cursor: pointer;\r\n`\r\n\r\nfunction Cat(){\r\n    const [url,setUrl] = useState()\r\n    const callApi = () => {\r\n        fetch(\"https://api.thecatapi.com/v1/images/search\").then(response => response.json()).then(data => setUrl(data[0].url) )\r\n    }\r\n    const [isClicked,setIsClicked] = useState(false)\r\n    const btnClicked = () => {\r\n        callApi();\r\n        if(isClicked===false){\r\n        setIsClicked(true)}\r\n    }\r\n    const props = useSpring({\r\n        from: {opacity: 0},\r\n        to: {opacity: 1}\r\n    })\r\n        \r\n    \r\n    return(\r\n        <Container>\r\n            <Wrapper onClick={()=>{btnClicked()}}>\r\n                {!isClicked\r\n                ?<div>click\r\n                <ClickIcon />\r\n                </div>\r\n            : null}\r\n               \r\n                 <animated.img style={props} src={url} />\r\n            </Wrapper>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cat;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React,{useState} from 'react';\nimport Cat from './components/Cat.js'\nimport styled from 'styled-components';\n\n\nfunction App() {\n\n\n\n  return (\n    <div>\n      <Cat />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}